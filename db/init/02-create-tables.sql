CREATE SEQUENCE pallet_ids;
CREATE TABLE product.product_size (
  id BIGSERIAL PRIMARY KEY,
  species_id TEXT,
  variety_id TEXT,
  jv_code TEXT,
  jv_description TEXT,
  shipper_code TEXT,
  shipper_description TEXT,
  combine_with TEXT,
  combine_description TEXT,
  shipper_id TEXT
);
CREATE TABLE product.inventory_item (
  id BIGSERIAL PRIMARY KEY,
  product_id TEXT,
  location_id TEXT,
  vessel_code TEXT,
  jv_lot_number TEXT,
  shipper_id TEXT,
  pallets_received NUMERIC,
  pallets_committed NUMERIC,
  pallets_on_hand NUMERIC,
  pallets_available NUMERIC,
  pallets_shipped NUMERIC,
  pallets_transferred_in NUMERIC,
  pallets_transferred_out NUMERIC,
  plu BOOLEAN,
  country_id TEXT,
  special_lot_number TEXT,
  coast TEXT,
  storage_rank TEXT,
  warehouse_id TEXT,
  is_pre BOOLEAN
);
CREATE TABLE product.pack_master (
  id BIGSERIAL PRIMARY KEY,
  shipper_id TEXT,
  label_code_id TEXT,
  customer_code_id TEXT,
  box_type_id TEXT,
  box_style_id TEXT,
  pack_style_id TEXT,
  out_code_id TEXT,
  out_quantity TEXT,
  out_weight TEXT,
  production_code_id TEXT,
  tree_ripe_id TEXT,
  grade_code_id TEXT,
  ma_code_id TEXT,
  liner_code_id TEXT,
  net_weight_contents NUMERIC,
  net_weight_box NUMERIC,
  box_length NUMERIC,
  box_width NUMERIC,
  box_height NUMERIC,
  pallet_type_id TEXT,
  default_pallet_quantity NUMERIC,
  plu_upc_code TEXT,
  destination_code_id TEXT,
  old_pack_code TEXT,
  old_label_code TEXT,
  jv_pack_code TEXT,
  pack_description TEXT,
  variety_id TEXT,
  species_id TEXT,
  hold_code_id TEXT
);
CREATE TABLE product.product_species (
  id TEXT PRIMARY KEY,
  species_description TEXT,
  secondary_description TEXT,
  fda_product_code TEXT,
  fda_industry_code TEXT,
  default_temperature TEXT
);
CREATE TABLE product.common_category (
  id BIGSERIAL PRIMARY KEY,
  category_name TEXT,
  category_description TEXT,
  ui_color TEXT
);
CREATE TABLE product.common_species (
  id BIGSERIAL PRIMARY KEY,
  default_inv_sort_key TEXT,
  pallet_weight NUMERIC,
  species_name TEXT,
  species_description TEXT,
  ui_color TEXT,
  common_category_id BIGINT REFERENCES product.common_category(id),
  product_species_id TEXT REFERENCES product.product_species(id)
);

CREATE TABLE product.common_size (
  id BIGSERIAL PRIMARY KEY,
  default_inv_sort_key TEXT,
  size_name TEXT,
  size_description TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id),
  product_size_id BIGINT REFERENCES product.product_size(id)
);

CREATE TABLE product.common_pack_type (
  id BIGSERIAL PRIMARY KEY,
  box_count BIGINT,
  default_inv_sort_key TEXT,
  pack_type_name TEXT,
  pack_type_description TEXT,
  repack_style_id TEXT,
  pallet_weight NUMERIC,
  common_species_id BIGINT REFERENCES product.common_species(id),
  pack_master_id BIGINT REFERENCES product.pack_master(id)
);

CREATE TABLE product.common_size_product_size (
  id BIGSERIAL PRIMARY KEY,
  common_size_id BIGINT REFERENCES product.common_size(id),
  product_size_id BIGINT REFERENCES product.product_size(id)
);

CREATE TABLE product.product_variety (
  id TEXT PRIMARY KEY,
  variety_description TEXT,
  secondary_description TEXT,
  customer_letter_sequence TEXT,
  summary_code TEXT,
  variety_group TEXT,
  combine_with TEXT
);
CREATE TABLE product.common_variety (
  id BIGSERIAL PRIMARY KEY,
  default_inv_sort_key TEXT,
  variety_name TEXT,
  variety_description TEXT,
  ui_color TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id),
  product_variety_id TEXT REFERENCES product.product_variety(id)
);
CREATE TABLE accounting.expense_header (
  id BIGSERIAL PRIMARY KEY,
  vendor_id TEXT,
  voucher_id TEXT,
  invoice_id TEXT,
  is_estimated BOOLEAN,
  paid_code TEXT,
  receivable_cut BOOLEAN,
  ap_hide BOOLEAN,
  is_prorate BOOLEAN,
  expense_amount NUMERIC,
  check_number NUMERIC,
  entry_date DATE,
  expense_code TEXT,
  truck_load_id TEXT,
  vessel_code TEXT,
  customs_entry_code TEXT
);
CREATE TABLE accounting.expense_header_review (
  id BIGSERIAL PRIMARY KEY,
  vendor_id TEXT,
  voucher_id TEXT,
  expense_code TEXT,
  is_approved BOOLEAN,
  notes TEXT
);
CREATE TABLE accounting.expense_item (
  id BIGSERIAL PRIMARY KEY,
  vendor_id TEXT,
  voucher_id TEXT,
  sequence_id NUMERIC,
  quantity NUMERIC,
  unit_price NUMERIC,
  item_amount NUMERIC,
  bill_of_lading_id TEXT,
  product_code TEXT,
  pallet_id TEXT,
  shipper_id TEXT,
  expense_code TEXT,
  vessel_code TEXT,
  notes TEXT
);
CREATE TABLE accounting.customer_payment (
  id BIGSERIAL PRIMARY KEY,
  invoice_id TEXT NOT NULL,
  check_number TEXT,
  transaction_code TEXT,
  transaction_type TEXT,
  net_amount_due NUMERIC,
  notes TEXT
);
CREATE TABLE accounting.unpaid (
  id BIGSERIAL PRIMARY KEY,
  vessel_code TEXT NOT NULL,
  shipper_id TEXT NOT NULL,
  invoice_id TEXT NOT NULL,
  is_urgent BOOLEAN,
  is_approved BOOLEAN,
  notes TEXT
);
CREATE TABLE accounting.check_header (
  id BIGSERIAL PRIMARY KEY,
  is_reconciled BOOLEAN,
  check_status TEXT NOT NULL,
  check_number TEXT NOT NULL,
  vendor_id TEXT NOT NULL,
  remit_to_code NUMERIC,
  invoice_amount NUMERIC NOT NULL,
  discount_amount NUMERIC NOT NULL,
  check_amount NUMERIC NOT NULL,
  check_date DATE,
  bank_id TEXT NOT NULL,
  invoice_id TEXT NOT NULL,
  is_void BOOLEAN,
  entry_date DATE
);
CREATE TABLE accounting.wire_request (
  id BIGSERIAL PRIMARY KEY,
  bank_id TEXT NOT NULL,
  vendor_id TEXT NOT NULL,
  wire_number TEXT,
  request_date DATE NOT NULL,
  wire_date DATE NOT NULL,
  wire_type TEXT NOT NULL,
  approval_user_code TEXT,
  approval_date DATE,
  request_user_code TEXT NOT NULL,
  is_verified BOOLEAN,
  sent_date DATE
);
CREATE TABLE accounting.wire_request_ocean_freight_item (
  id BIGSERIAL PRIMARY KEY,
  wire_request_id BIGINT NOT NULL REFERENCES accounting.wire_request(id),
  bill_of_lading TEXT NOT NULL,
  vessel_code TEXT NOT NULL,
  shipper_id TEXT NOT NULL,
  pallet_count NUMERIC NOT NULL,
  freight_amount NUMERIC NOT NULL,
  received_date DATE NOT NULL
);
CREATE TABLE accounting.wire_request_shipper_advance_item (
  id BIGSERIAL PRIMARY KEY,
  wire_request_id BIGINT NOT NULL REFERENCES accounting.wire_request(id),
  bill_of_lading TEXT NOT NULL,
  vessel_code TEXT NOT NULL,
  species_id TEXT NOT NULL,
  box_amount NUMERIC NOT NULL
);
CREATE TABLE accounting.wire_request_account_of_sale_item (
  id BIGSERIAL PRIMARY KEY,
  wire_request_id BIGINT NOT NULL REFERENCES accounting.wire_request(id),
  bill_of_lading TEXT NOT NULL,
  vessel_code TEXT NOT NULL
);
CREATE TABLE accounting.wire_request_misc_item (
  id BIGSERIAL PRIMARY KEY,
  wire_request_id BIGINT NOT NULL REFERENCES accounting.wire_request(id),
  item_description TEXT NOT NULL,
  item_amount NUMERIC NOT NULL
);
CREATE TABLE accounting.vessel_control (
  id BIGSERIAL PRIMARY KEY,
  vessel_code TEXT NOT NULL,
  shipper_id TEXT NOT NULL,
  approval_1 BOOLEAN,
  approval_2 BOOLEAN,
  date_sent DATE,
  is_liquidated BOOLEAN,
  notes_1 TEXT,
  notes_2 TEXT
);
CREATE TABLE accounting.invoice_header (
  id BIGSERIAL PRIMARY KEY,
  order_status TEXT,
  order_id NUMERIC,
  back_order_id NUMERIC,
  truck_load_id TEXT,
  ship_warehouse_id TEXT,
  invoice_id TEXT,
  billing_customer_id TEXT,
  sales_user_code TEXT,
  customer_po TEXT,
  invoice_date DATE,
  shipping_customer_id TEXT,
  order_date DATE,
  entry_date DATE,
  actual_ship_date DATE,
  expected_ship_date DATE,
  amount_owed NUMERIC,
  paid_code TEXT,
  load_location TEXT,
  vendor_id TEXT,
  load_status TEXT,
  fob BOOLEAN,
  register_number TEXT,
  delivery_zone TEXT,
  notes TEXT
);
CREATE TABLE accounting.invoice_item (
  id BIGSERIAL PRIMARY KEY,
  pallet_status TEXT,
  order_id NUMERIC,
  back_order_id NUMERIC,
  line_id NUMERIC,
  sequence_id NUMERIC,
  picked_qty NUMERIC,
  credited_qty NUMERIC,
  pallet_id TEXT NOT NULL,
  condition_code TEXT,
  credit_code TEXT,
  repack_code TEXT,
  unit_sell_price NUMERIC,
  price_adjustment NUMERIC,
  delivery_charge NUMERIC,
  freight_adjustment NUMERIC,
  credit_amount NUMERIC,
  brokerage_amount NUMERIC,
  mia_adjustment NUMERIC,
  volume_discount_amount NUMERIC,
  layer_mult BOOLEAN,
  flag TEXT,
  notes TEXT
);
CREATE TABLE accounting.invoice_item_history (
  id BIGSERIAL PRIMARY KEY,
  order_id NUMERIC,
  back_order_id NUMERIC,
  line_id NUMERIC,
  sequence_id NUMERIC,
  pallet_id TEXT NOT NULL,
  picked_qty NUMERIC,
  condition_code TEXT,
  credit_code TEXT,
  unit_sell_price NUMERIC,
  price_adjustment NUMERIC,
  delivery_charge NUMERIC,
  freight_adjustment NUMERIC,
  brokerage_amount NUMERIC,
  mia_adjustment NUMERIC,
  volume_discount_amount NUMERIC,
  updated_at TIMESTAMP
);
CREATE TABLE sales.agenda_item (
  id BIGSERIAL PRIMARY KEY,
  content TEXT NOT NULL,
  item_date DATE NOT NULL,
  sort_order INT NOT NULL
);
CREATE TABLE sales.calendar_event (
  id BIGSERIAL PRIMARY KEY,
  title TEXT,
  event_description TEXT,
  start_date TIMESTAMP,
  end_date TIMESTAMP,
  all_day BOOLEAN,
  rrule TEXT
);
CREATE TABLE sales.price_category (
  id BIGSERIAL PRIMARY KEY,
  category_name TEXT NOT NULL,
  sort_order INT NOT NULL
);
CREATE TABLE sales.price_product (
  id BIGSERIAL PRIMARY KEY,
  category_id BIGINT NOT NULL REFERENCES sales.price_category(id) ON DELETE CASCADE,
  color TEXT NOT NULL,
  product_name TEXT NOT NULL,
  sort_order INT NOT NULL
);
CREATE TABLE sales.price_size (
  id BIGSERIAL PRIMARY KEY,
  product_id BIGINT NOT NULL REFERENCES sales.price_product(id) ON DELETE CASCADE,
  size_name TEXT NOT NULL,
  sort_order INT NOT NULL
);
CREATE TABLE sales.price_entry (
  id BIGSERIAL PRIMARY KEY,
  size_id BIGINT NOT NULL REFERENCES sales.price_size(id) ON DELETE CASCADE,
  entry_date DATE NOT NULL,
  entry_description TEXT NOT NULL,
  content TEXT NOT NULL,
  highlight BOOLEAN NOT NULL
);
CREATE TABLE IF NOT EXISTS product.vessel (
  id BIGSERIAL PRIMARY KEY,
  vessel_code TEXT NOT NULL,
  pre_vessel_code TEXT,
  vessel_name TEXT,
  arrival_port TEXT,
  country_id TEXT,
  departure_date DATE,
  arrival_date DATE,
  discharge_date DATE,
  coast TEXT,
  is_pre BOOLEAN,
  is_available BOOLEAN,
  inv_flag BOOLEAN,
  schedule_notes TEXT
);
CREATE TABLE product.common_species_product_species (
  id BIGSERIAL PRIMARY KEY,
  common_species_id BIGINT REFERENCES product.common_species(id),
  product_species_id TEXT REFERENCES product.product_species(id)
);
CREATE TABLE directory.country (
  id TEXT PRIMARY KEY,
  country_name TEXT NOT NULL,
  cmb_id TEXT
);
CREATE TABLE directory.customer_volume_discount (
  id BIGSERIAL PRIMARY KEY,
  customer_id TEXT,
  volume_discount_code TEXT,
  amount NUMERIC
);
CREATE TABLE directory.customer (
  id TEXT PRIMARY KEY,
  customer_name TEXT NOT NULL,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  postal_state TEXT,
  zip_code TEXT,
  country_id TEXT,
  phone TEXT,
  logo_src TEXT,
  notes TEXT,
  website TEXT,
  active BOOLEAN NOT NULL,
  sales_user_code TEXT
);
CREATE TABLE directory.shipper (
  id TEXT PRIMARY KEY,
  shipper_name TEXT NOT NULL,
  country_id TEXT REFERENCES directory.country(id) ON DELETE
  SET NULL,
    group_id TEXT,
    logo_src TEXT,
    notes TEXT,
    website TEXT,
    send_projection_request BOOLEAN,
    projection_request_start_date DATE,
    projection_request_end_date DATE,
    vessel_control_days_until_due NUMERIC,
    psa_shipper_id TEXT,
    commission_rate NUMERIC
);
CREATE TABLE product.shipper_program (
  id BIGSERIAL PRIMARY KEY,
  arrival_port TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id) ON DELETE
  SET NULL,
    common_variety_id BIGINT REFERENCES product.common_variety(id) ON DELETE
  SET NULL,
    common_size_id BIGINT REFERENCES product.common_size(id) ON DELETE
  SET NULL,
    common_pack_type_id BIGINT REFERENCES product.common_pack_type(id) ON DELETE
  SET NULL,
    plu TEXT,
    notes TEXT,
    shipper_id TEXT REFERENCES directory.shipper(id) ON DELETE
  SET NULL,
    customer_id TEXT REFERENCES directory.customer(id) ON DELETE
  SET NULL
);
CREATE TABLE product.shipper_program_entry (
  id BIGSERIAL PRIMARY KEY,
  notes TEXT,
  program_date DATE,
  pallet_count NUMERIC,
  shipper_program_id BIGINT REFERENCES product.shipper_program(id) ON DELETE CASCADE
);
CREATE TABLE product.customer_program (
  id BIGSERIAL PRIMARY KEY,
  arrival_port TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id) ON DELETE
  SET NULL,
    common_variety_id BIGINT REFERENCES product.common_variety(id) ON DELETE
  SET NULL,
    common_size_id BIGINT REFERENCES product.common_size(id) ON DELETE
  SET NULL,
    common_pack_type_id BIGINT REFERENCES product.common_pack_type(id) ON DELETE
  SET NULL,
    notes TEXT,
    plu TEXT,
    customer_id TEXT REFERENCES directory.customer(id) ON DELETE
  SET NULL
);
CREATE TABLE product.customer_program_entry (
  id BIGSERIAL PRIMARY KEY,
  is_ad_week BOOLEAN,
  notes TEXT,
  program_date DATE,
  pallet_count NUMERIC,
  program_price NUMERIC,
  customer_program_id BIGINT REFERENCES product.customer_program(id) ON DELETE CASCADE
);
CREATE TABLE product.shipper_program_entry_customer_program_entry (
  id BIGSERIAL PRIMARY KEY,
  pallet_count NUMERIC,
  customer_program_entry_id BIGINT REFERENCES product.customer_program_entry(id) ON DELETE CASCADE,
  shipper_program_entry_id BIGINT REFERENCES product.shipper_program_entry(id) ON DELETE CASCADE
);
CREATE TABLE product.common_variety_product_variety (
  id BIGSERIAL PRIMARY KEY,
  common_variety_id BIGINT REFERENCES product.common_variety(id),
  product_variety_id TEXT REFERENCES product.product_variety(id)
);
CREATE TABLE product.common_pack_type_pack_master (
  id BIGSERIAL PRIMARY KEY,
  common_pack_type_id BIGINT REFERENCES product.common_pack_type(id),
  pack_master_id BIGINT REFERENCES product.pack_master(id)
);
CREATE TABLE product.common_species_tag (
  tag_text TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id),
  PRIMARY KEY (tag_text, common_species_id)
);
CREATE TABLE product.common_variety_tag (
  tag_text TEXT,
  common_variety_id BIGINT REFERENCES product.common_variety(id),
  PRIMARY KEY (tag_text, common_variety_id)
);
CREATE TABLE product.common_size_tag (
  tag_text TEXT,
  common_size_id BIGINT REFERENCES product.common_size(id),
  PRIMARY KEY (tag_text, common_size_id)
);
CREATE TABLE product.common_pack_type_tag (
  tag_text TEXT,
  common_pack_type_id BIGINT REFERENCES product.common_pack_type(id),
  PRIMARY KEY (tag_text, common_pack_type_id)
);
CREATE TABLE product.shipper_projection (
  id BIGSERIAL PRIMARY KEY,
  submitted_at TIMESTAMP,
  shipper_comments TEXT,
  jv_comments TEXT,
  approved_at TIMESTAMP,
  rejected_at TIMESTAMP,
  review_status INT,
  shipper_id TEXT REFERENCES directory.shipper(id) ON DELETE
  SET NULL
);
CREATE TABLE product.shipper_projection_vessel (
  id BIGSERIAL PRIMARY KEY,
  shipper_id TEXT REFERENCES directory.shipper(id) ON DELETE
  SET NULL,
    vessel_id BIGINT REFERENCES product.vessel(id) ON DELETE
  SET NULL
);
CREATE TABLE product.shipper_projection_vessel_info (
  id BIGSERIAL PRIMARY KEY,
  vessel_name TEXT,
  departure_date DATE,
  arrival_date DATE,
  arrival_port TEXT,
  vessel_status TEXT,
  shipper_id TEXT REFERENCES directory.shipper(id) ON DELETE
  SET NULL,
    projection_id BIGINT REFERENCES product.shipper_projection(id) ON DELETE
  SET NULL,
    vessel_id BIGINT REFERENCES product.shipper_projection_vessel(id) ON DELETE
  SET NULL
);
CREATE TABLE product.shipper_projection_product (
  id BIGSERIAL PRIMARY KEY,
  species TEXT,
  variety TEXT,
  size TEXT,
  pack_type TEXT,
  plu TEXT,
  customer_value TEXT,
  common_species_id BIGINT REFERENCES product.common_species(id) ON DELETE
  SET NULL,
    common_variety_id BIGINT REFERENCES product.common_variety(id) ON DELETE
  SET NULL,
    common_size_id BIGINT REFERENCES product.common_size(id) ON DELETE
  SET NULL,
    common_pack_type_id BIGINT REFERENCES product.common_pack_type(id) ON DELETE
  SET NULL,
    shipper_id TEXT REFERENCES directory.shipper(id) ON DELETE
  SET NULL,
    customer_id TEXT REFERENCES directory.customer(id) ON DELETE
  SET NULL
);
CREATE TABLE product.shipper_projection_entry (
  id BIGSERIAL PRIMARY KEY,
  pallet_count NUMERIC,
  vessel_info_id BIGINT REFERENCES product.shipper_projection_vessel_info(id) ON DELETE
  SET NULL,
    product_id BIGINT REFERENCES product.shipper_projection_product(id) ON DELETE
  SET NULL
);
CREATE TABLE product.pack_atmosphere (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, ma_code),
  shipper_id TEXT,
  ma_code TEXT,
  ma_description TEXT
);
CREATE TABLE product.pack_box_style (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, box_style),
  shipper_id TEXT,
  box_style TEXT,
  box_description TEXT,
  combine_with TEXT,
  combine_description TEXT
);
CREATE TABLE product.pack_box_type (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, box_type),
  shipper_id TEXT,
  box_type TEXT,
  box_description TEXT
);
CREATE TABLE product.pack_destination (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, destination_code),
  shipper_id TEXT,
  destination_code TEXT,
  destination_description TEXT
);
CREATE TABLE product.pack_grade (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, grade_code),
  shipper_id TEXT,
  grade_code TEXT,
  grade_description TEXT
);
CREATE TABLE product.pack_hold (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, hold_code),
  shipper_id TEXT,
  hold_code TEXT,
  hold_description TEXT
);
CREATE TABLE product.pack_label (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, label_code),
  label_code TEXT,
  label_name TEXT,
  shipper_id TEXT,
  shipper_name TEXT
);
CREATE TABLE product.pack_liner (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, liner_code),
  shipper_id TEXT,
  liner_code TEXT,
  liner_description TEXT
);
CREATE TABLE product.pack_out (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, out_code),
  shipper_id TEXT,
  out_code TEXT,
  out_description TEXT,
  combine_with TEXT
);
CREATE TABLE product.pack_pallet_type (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, pallet_type),
  shipper_id TEXT,
  pallet_type TEXT,
  pallet_type_description TEXT,
  combine_with TEXT
);
CREATE TABLE product.pack_production (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, production_code),
  shipper_id TEXT,
  production_code TEXT,
  production_description TEXT,
  combine_with TEXT
);
CREATE TABLE product.pack_special (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, customer_code),
  shipper_id TEXT,
  customer_code TEXT,
  customer_id TEXT,
  customer_name TEXT
);
CREATE TABLE operations.order_entry (
  id BIGSERIAL PRIMARY KEY,
  order_id NUMERIC,
  back_order_id NUMERIC,
  truck_load_id TEXT,
  fob BOOLEAN,
  billing_customer_id TEXT,
  sales_user_code TEXT,
  submitted_by_user_code TEXT,
  customer_po TEXT,
  fob_date DATE,
  delivered_date DATE,
  order_date TIMESTAMP,
  review_user_code TEXT,
  review_date TIMESTAMP,
  notes TEXT
);
CREATE TABLE product.pack_style (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, pack_style),
  shipper_id TEXT,
  pack_style TEXT,
  style_description TEXT,
  combine_with TEXT
);
CREATE TABLE product.pack_tree_ripe (
  id BIGSERIAL PRIMARY KEY,
  UNIQUE (shipper_id, tree_ripe),
  shipper_id TEXT,
  tree_ripe TEXT,
  tree_ripe_description TEXT
);
CREATE TABLE product.container (
  id BIGSERIAL PRIMARY KEY,
  vessel_code TEXT NOT NULL,
  container_id TEXT,
  vendor_id TEXT,
  warehouse_id TEXT,
  container_description TEXT,
  release_date DATE,
  release_confirmed BOOLEAN,
  discharge_date DATE,
  discharge_confirmed BOOLEAN,
  sent_confirmed BOOLEAN,
  is_available BOOLEAN,
  is_new BOOLEAN,
  is_schedule BOOLEAN,
  notes1 TEXT,
  notes2 TEXT,
  notes3 TEXT
);
CREATE TABLE product.container_treatment (
  id BIGSERIAL PRIMARY KEY,
  container_id BIGINT NOT NULL REFERENCES product.container(id) ON DELETE CASCADE,
  treatment_date DATE,
  treatment_confirmed BOOLEAN,
  treatment_result TEXT,
  treatment_type TEXT NOT NULL,
  treatment_notes TEXT
);
CREATE TABLE product.product_master (
  id TEXT PRIMARY KEY,
  default_pallet_quantity TEXT,
  lot_number TEXT
);
CREATE TABLE product.repack_style (
  id TEXT PRIMARY KEY,
  style_name TEXT,
  style_description TEXT,
  lqd_code TEXT,
  film_length NUMERIC,
  pack_out_weight NUMERIC
);
CREATE TABLE product.pallet (
  id BIGSERIAL PRIMARY KEY,
  vessel_code TEXT NOT NULL,
  pallet_id TEXT NOT NULL,
  product_id TEXT,
  current_box_quantity NUMERIC,
  received_box_quantity NUMERIC,
  returned_box_quantity NUMERIC,
  location_id TEXT,
  room TEXT,
  section TEXT,
  row TEXT,
  jv_lot_number TEXT,
  shipper_id TEXT,
  date_transferred_to_storage TEXT,
  order_id TEXT,
  back_order_id TEXT,
  shipped BOOLEAN,
  age NUMERIC,
  volume_discount_code TEXT,
  original_location_id TEXT,
  filler TEXT,
  grower_id TEXT,
  old_pack_code TEXT,
  pack_date TEXT,
  hatch TEXT,
  deck TEXT,
  bill_of_lading TEXT,
  container_id TEXT,
  temperature_recording TEXT
);
CREATE TABLE product.pallet_section (
  id BIGSERIAL PRIMARY KEY,
  pallet_id TEXT NOT NULL,
  grower_id TEXT,
  variety_id TEXT,
  size_id TEXT,
  box_quantity NUMERIC,
  pack_date TEXT
);
CREATE TABLE operations.order_item (
  id BIGSERIAL PRIMARY KEY,
  item_status TEXT,
  order_id NUMERIC,
  back_order_id NUMERIC,
  line_id NUMERIC,
  pallet_count NUMERIC,
  unit_sell_price NUMERIC,
  delivery_charge NUMERIC,
  is_bundle BOOLEAN,
  box_count NUMERIC,
  product_id TEXT,
  location_id TEXT,
  vessel_code TEXT,
  jv_lot_number TEXT,
  special_lot_number TEXT,
  shipper_id TEXT,
  is_pre BOOLEAN,
  notes TEXT
);
CREATE TABLE operations.order_entry_item (
  id BIGSERIAL PRIMARY KEY,
  order_entry_id BIGINT NOT NULL REFERENCES operations.order_entry(id) ON DELETE CASCADE,
  line_id NUMERIC,
  pallet_count NUMERIC,
  unit_sell_price NUMERIC,
  delivery_charge NUMERIC,
  location_id TEXT,
  vessel_code TEXT,
  shipper_id TEXT,
  species TEXT,
  variety TEXT,
  size TEXT,
  pack_type TEXT,
  plu TEXT,
  country_of_origin TEXT,
  label TEXT,
  box_count NUMERIC,
  pallet_weight NUMERIC,
  notes TEXT
);
CREATE TABLE operations.order_entry_review_item (
  id BIGSERIAL PRIMARY KEY,
  order_entry_item_id BIGINT NOT NULL REFERENCES operations.order_entry_item(id) ON DELETE CASCADE,
  location_id TEXT,
  vessel_code TEXT,
  shipper_id TEXT,
  species TEXT,
  variety TEXT,
  size TEXT,
  pack_type TEXT,
  plu TEXT,
  country_of_origin TEXT,
  pallet_count NUMERIC,
  box_count NUMERIC,
  pallet_weight NUMERIC,
  label TEXT
);
CREATE TABLE operations.order_comment (
  id BIGSERIAL PRIMARY KEY,
  order_id NUMERIC,
  back_order_id NUMERIC,
  line_id NUMERIC,
  print_code TEXT,
  notes TEXT
);
CREATE TABLE operations.order_master (
  id BIGSERIAL PRIMARY KEY,
  order_status TEXT,
  load_status TEXT,
  order_id NUMERIC,
  back_order_id NUMERIC,
  ship_warehouse_id TEXT,
  truck_load_id TEXT,
  fob BOOLEAN,
  billing_customer_id TEXT,
  sales_user_code TEXT,
  customer_po TEXT,
  expected_ship_date DATE,
  order_date DATE,
  entry_date DATE,
  actual_ship_date DATE,
  shipping_customer_id TEXT,
  entry_user_code TEXT,
  delivery_zone TEXT,
  load_location TEXT,
  vendor_id TEXT,
  notes TEXT
);
CREATE TABLE operations.repack_header (
  id BIGSERIAL PRIMARY KEY,
  repack_code TEXT,
  run_number TEXT,
  wh_bags_out NUMERIC,
  wh_weight_in NUMERIC,
  wh_weight_out NUMERIC,
  wh_boxes_in NUMERIC,
  wh_boxes_out NUMERIC,
  repack_date DATE,
  repack_style_id TEXT,
  warehouse_id TEXT,
  entry_user_code TEXT,
  notes TEXT
);
CREATE TABLE operations.repack_item (
  id BIGSERIAL PRIMARY KEY,
  repack_code TEXT,
  run_number TEXT,
  pallet_id TEXT,
  new_pallet_id TEXT,
  boxes_in NUMERIC,
  boxes_out NUMERIC,
  notes TEXT
);
CREATE TABLE operations.repack_queue (
  id BIGSERIAL PRIMARY KEY,
  order_id NUMERIC,
  repack_code TEXT,
  repack_date DATE,
  repack_style_id TEXT,
  warehouse_id TEXT,
  pallet_count NUMERIC,
  ship_date DATE,
  del_date DATE,
  order_notes TEXT,
  notes TEXT
);
CREATE TABLE operations.truck_load (
  id BIGSERIAL PRIMARY KEY,
  load_id TEXT,
  load_status TEXT,
  vendor_id TEXT,
  fob BOOLEAN,
  ship_date DATE,
  ryan_number TEXT,
  trucker_name TEXT,
  expeditor_name TEXT,
  time_started TIMESTAMP,
  time_completed TIMESTAMP,
  time_in TIMESTAMP,
  time_out TIMESTAMP,
  time_confirmed TIMESTAMP,
  warehouse_id TEXT,
  change_flag BOOLEAN,
  license_plate TEXT,
  in_use BOOLEAN,
  cartage TEXT,
  cartage_vendor_id TEXT,
  temperature TEXT,
  load_lock TEXT,
  notes TEXT
);
CREATE TABLE directory.person_contact (
  id BIGSERIAL PRIMARY KEY,
  first_name TEXT NOT NULL,
  last_name TEXT NOT NULL,
  is_primary BOOLEAN NOT NULL,
  email TEXT,
  secondary_email TEXT,
  location TEXT,
  home_phone TEXT,
  home_extension TEXT,
  cell_phone TEXT,
  work_phone TEXT,
  work_extension TEXT,
  image_src TEXT,
  is_internal BOOLEAN NOT NULL,
  roles TEXT
);
CREATE TABLE public.user (
  id BIGSERIAL PRIMARY KEY,
  default_coast TEXT,
  pin TEXT UNIQUE,
  person_contact_id BIGINT REFERENCES directory.person_contact(id) ON DELETE
  SET NULL,
    user_code TEXT
);
CREATE TABLE operations.load_number (
  id BIGINT PRIMARY KEY,
  customer_id TEXT,
  notes TEXT,
  user_id BIGINT REFERENCES public.user(id) ON DELETE
  SET NULL
);
CREATE TABLE order_number (id BIGSERIAL PRIMARY KEY);
CREATE TABLE operations.truck_rate (
  id BIGSERIAL PRIMARY KEY,
  location_description TEXT,
  vendor_id TEXT,
  postal_state TEXT,
  is_default BOOLEAN,
  full_load_rate NUMERIC,
  pallet_rate_1 NUMERIC,
  pallet_rate_2 NUMERIC,
  pallet_rate_3 NUMERIC,
  pallet_rate_4 NUMERIC,
  pallet_rate_5 NUMERIC,
  pallet_rate_6 NUMERIC,
  pallet_rate_7 NUMERIC,
  pallet_rate_8 NUMERIC,
  pallet_rate_9 NUMERIC,
  pallet_rate_10 NUMERIC,
  pallet_rate_11 NUMERIC,
  pallet_rate_12 NUMERIC,
  pallet_rate_13 NUMERIC,
  pallet_rate_14 NUMERIC,
  pallet_rate_15 NUMERIC,
  notes TEXT
);
CREATE TABLE operations.truck_rate_customer (
  truck_rate_id BIGINT NOT NULL,
  customer_id TEXT NOT NULL,
  PRIMARY KEY (truck_rate_id, customer_id),
  FOREIGN KEY (truck_rate_id) REFERENCES operations.truck_rate(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (customer_id) REFERENCES directory.customer(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE directory.contact_group (
  id BIGSERIAL PRIMARY KEY,
  group_description TEXT NOT NULL,
  group_name TEXT NOT NULL,
  user_id BIGINT REFERENCES public.user(id) ON DELETE
  SET NULL
);
CREATE TABLE directory.contact_group_person_contact (
  group_id BIGINT NOT NULL,
  person_contact_id BIGINT NOT NULL,
  PRIMARY KEY (group_id, person_contact_id),
  FOREIGN KEY (group_id) REFERENCES directory.contact_group(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (person_contact_id) REFERENCES directory.person_contact(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE directory.shipper_person_contact (
  shipper_id TEXT NOT NULL,
  person_contact_id BIGINT NOT NULL,
  PRIMARY KEY (shipper_id, person_contact_id),
  FOREIGN KEY (shipper_id) REFERENCES directory.shipper(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (person_contact_id) REFERENCES directory.person_contact(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE directory.shipper_advance (
  id BIGSERIAL PRIMARY KEY,
  shipper_id TEXT NOT NULL REFERENCES directory.shipper(id),
  species_id TEXT NOT NULL REFERENCES product.product_species(id),
  advance_amount NUMERIC NOT NULL
);
CREATE TABLE directory.warehouse (
  id TEXT PRIMARY KEY,
  warehouse_name TEXT NOT NULL,
  address_1 TEXT,
  address_2 TEXT,
  address_3 TEXT,
  city TEXT,
  postal_state TEXT,
  country_id TEXT REFERENCES directory.country(id) ON DELETE
  SET NULL,
    zip_code TEXT,
    phone TEXT,
    out_queue TEXT,
    state_tax_code TEXT,
    county_tax_code TEXT,
    city_tax_code TEXT,
    misc_tax_code TEXT
);
CREATE TABLE directory.warehouse_person_contact (
  warehouse_id TEXT NOT NULL,
  person_contact_id BIGINT NOT NULL,
  PRIMARY KEY (warehouse_id, person_contact_id),
  FOREIGN KEY (warehouse_id) REFERENCES directory.warehouse(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (person_contact_id) REFERENCES directory.person_contact(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE directory.vendor (
  id TEXT PRIMARY KEY,
  vendor_name TEXT NOT NULL,
  address_1 TEXT,
  address_2 TEXT,
  city TEXT,
  postal_state TEXT,
  zip_code TEXT,
  country_id TEXT,
  phone TEXT,
  attention TEXT,
  vendor_type TEXT,
  ledger_code TEXT,
  bank_code TEXT,
  has_1099 BOOLEAN,
  id_1099 TEXT,
  is_temp BOOLEAN,
  notes TEXT
);
CREATE TABLE directory.vendor_person_contact (
  vendor_id TEXT NOT NULL,
  person_contact_id BIGINT NOT NULL,
  PRIMARY KEY (vendor_id, person_contact_id),
  FOREIGN KEY (vendor_id) REFERENCES directory.vendor(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (person_contact_id) REFERENCES directory.person_contact(id) ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE directory.customer_person_contact (
  customer_id TEXT NOT NULL,
  person_contact_id BIGINT NOT NULL,
  PRIMARY KEY (customer_id, person_contact_id),
  FOREIGN KEY (customer_id) REFERENCES directory.customer(id) ON UPDATE CASCADE ON DELETE CASCADE,
  FOREIGN KEY (person_contact_id) REFERENCES directory.person_contact(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE public.user_bookmark (
  id BIGSERIAL PRIMARY KEY,
  category TEXT,
  link_url TEXT,
  link_description TEXT,
  sort_order INT NOT NULL,
  user_id BIGINT REFERENCES public.user(id) ON DELETE CASCADE
);
CREATE TABLE public.user_message (
  id BIGSERIAL PRIMARY KEY,
  action_link TEXT,
  action_text TEXT,
  details TEXT,
  header TEXT,
  is_read BOOLEAN NOT NULL,
  message_date TIMESTAMP,
  priority NUMERIC,
  user_id BIGINT REFERENCES public.user(id) ON DELETE CASCADE
);
CREATE TABLE public.user_role (
  role_name TEXT NOT NULL,
  user_id BIGINT REFERENCES public.user(id) ON DELETE CASCADE,
  UNIQUE (user_id, role_name)
);
CREATE TABLE inspection.psa_grape_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date DATE,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  grade TEXT,
  insp_pack_code TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  auto_opening TEXT,
  bunches TEXT,
  size_min TEXT,
  size_max TEXT,
  size_most TEXT,
  undersize_bunches_count TEXT,
  auto_undersize_berries_bunches TEXT,
  undersize_berries_pct TEXT,
  color_min TEXT,
  color_max TEXT,
  color_most TEXT,
  color_consistency TEXT,
  auto_color_consistency TEXT,
  sunburn_bunches TEXT,
  auto_sunburn_bunches TEXT,
  sunburn_pct TEXT,
  sunburn_bunches_deg TEXT,
  bunch_conformation TEXT,
  auto_bunch_conformation TEXT,
  straggly_bunches TEXT,
  straggly_pct TEXT,
  small_bunches TEXT,
  russet_marks_bunches TEXT,
  russet_marks_pct TEXT,
  auto_russet_marks_pct TEXT,
  dust_pct TEXT,
  auto_dust_pct TEXT,
  residues_pct TEXT,
  auto_residues_pct TEXT,
  tight_bunches TEXT,
  auto_tight_bunches TEXT,
  bruising_bunches TEXT,
  auto_bruising_bunches TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  stem_dehydration_pct TEXT,
  auto_stem_dehydration_pct TEXT,
  stem_dehydration_deg TEXT,
  berry_condition TEXT,
  auto_berry_condition TEXT,
  h2o_berries TEXT,
  auto_h2o_berries TEXT,
  so2_damage_pct TEXT,
  auto_so2_damage_pct TEXT,
  so2_damage_deg TEXT,
  weak_bunches TEXT,
  auto_weak_bunches TEXT,
  splits_hairline_pct TEXT,
  auto_splits_hairline_pct TEXT,
  splits_wet_crush_pct TEXT,
  auto_splits_wet_crush_pct TEXT,
  splits_dry_pct TEXT,
  auto_splits_dry_pct TEXT,
  int_disc TEXT,
  auto_int_disc TEXT,
  int_disc_deg TEXT,
  decay_mold_berries TEXT,
  auto_decay_mold_berries TEXT,
  decay_slipskin_berries TEXT,
  auto_decay_slipskin_berries TEXT,
  decay_nest_berries TEXT,
  auto_decay_nest_berries TEXT,
  decay_nest_deg TEXT,
  shatter_pct TEXT,
  auto_shatter_pct TEXT,
  brix_min TEXT,
  brix_max TEXT,
  brix_most TEXT,
  overall_quality NUMERIC,
  auto_overall_quality TEXT,
  overall_condition NUMERIC,
  auto_overall_condition TEXT,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_cherry_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  size_min TEXT,
  size_max TEXT,
  size_most TEXT,
  color TEXT,
  scars_marks_pieces TEXT,
  scars_marks_pct TEXT,
  scars_marks_deg TEXT,
  misshapen_pieces TEXT,
  misshapen_pct TEXT,
  stemless_pieces TEXT,
  stemless_pct TEXT,
  splits_pieces TEXT,
  splits_pct TEXT,
  splits_deg TEXT,
  firmness TEXT,
  pitting_bruising_pieces TEXT,
  pitting_bruising_pct TEXT,
  pitting_bruising_deg TEXT,
  stem_dehydration_pieces TEXT,
  stem_dehydration_pct TEXT,
  stem_dehydration_deg TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_apple_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  run_number TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  grade TEXT,
  insp_grade TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  ground_color TEXT,
  blush_color TEXT,
  blush_pct TEXT,
  scars_pieces TEXT,
  scars_pct TEXT,
  scars_deg TEXT,
  stem_punctures_pieces TEXT,
  stem_punctures_pct TEXT,
  cuts_pieces TEXT,
  cuts_pct TEXT,
  cuts_deg TEXT,
  sun_scald_pieces TEXT,
  sun_scald_pct TEXT,
  sun_scald_deg TEXT,
  scald_pieces TEXT,
  scald_pct TEXT,
  scald_deg TEXT,
  bruising_pieces TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  cracking_pieces TEXT,
  cracking_pct TEXT,
  bitter_pit_pieces TEXT,
  bitter_pit_pct TEXT,
  bitter_pit_deg TEXT,
  lenticel_breakdown_pieces TEXT,
  lenticel_breakdown_pct TEXT,
  lenticel_breakdown_deg TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  cut_count TEXT,
  watercore_pieces TEXT,
  watercore_pct TEXT,
  internal_damage_pieces TEXT,
  internal_damage_per TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  pressure1 TEXT,
  pressure2 TEXT,
  pressure3 TEXT,
  pressure4 TEXT,
  pressure5 TEXT,
  pressure6 TEXT,
  pressures_min TEXT,
  pressures_max TEXT,
  pressures_avg TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_pear_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  run_number TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  grade TEXT,
  insp_grade TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  ground_color TEXT,
  blush_color TEXT,
  blush_pct TEXT,
  scars_russet_pieces TEXT,
  scars_russet_pct TEXT,
  scars_russet_deg TEXT,
  russet_per_piece_pct TEXT,
  stem_punctures_pieces TEXT,
  stem_punctures_pct TEXT,
  cuts_pieces TEXT,
  cuts_pct TEXT,
  cuts_deg TEXT,
  turning_color_pieces TEXT,
  turning_color_pct TEXT,
  turning_color_deg TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  bruising_pieces TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  cut_count TEXT,
  internal_damage_pieces TEXT,
  internal_damage_per TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  pressure1 TEXT,
  pressure2 TEXT,
  pressure3 TEXT,
  pressure4 TEXT,
  pressure5 TEXT,
  pressure6 TEXT,
  pressures_min TEXT,
  pressures_max TEXT,
  pressures_avg TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_arrival_report (
  id BIGINT PRIMARY KEY,
  report_date DATE,
  location_name TEXT,
  arrival_code TEXT,
  arrival_name TEXT,
  exporter_id TEXT,
  exporter_name TEXT
);
CREATE TABLE inspection.psa_arrival_picture (
  id BIGINT PRIMARY KEY,
  picture_date DATE,
  arrival_code TEXT,
  picture_description TEXT,
  exporter_id TEXT,
  pallet_id TEXT,
  product_code TEXT,
  variety_name TEXT
);
CREATE TABLE inspection.psa_lemon_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  grade TEXT,
  insp_grade TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  color TEXT,
  diameter_min_mm TEXT,
  diameter_min_inches TEXT,
  diameter_max_mm TEXT,
  diameter_max_inches TEXT,
  diameter_most_mm TEXT,
  diameter_most_inches TEXT,
  scars_pieces TEXT,
  scars_pct TEXT,
  scars_deg TEXT,
  green_haze_pieces TEXT,
  green_haze_pct TEXT,
  green_haze_deg TEXT,
  oil_spots_pieces TEXT,
  oil_spots_pct TEXT,
  oil_spots_deg TEXT,
  cut_count TEXT,
  dry_pulp_pieces TEXT,
  dry_pulp_pct TEXT,
  dry_pulp_deg TEXT,
  skin_damage_pieces TEXT,
  skin_damage_pct TEXT,
  skin_damage_deg TEXT,
  peteca_pieces TEXT,
  peteca_pct TEXT,
  peteca_deg TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  spores_pieces TEXT,
  spores_pct TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_persimmon_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  color TEXT,
  scars_marks_pieces TEXT,
  scars_marks_pct TEXT,
  scars_marks_deg TEXT,
  green_color_pieces TEXT,
  green_color TEXT,
  green_color_deg TEXT,
  cuts_splits_pieces TEXT,
  cuts_splits_pct TEXT,
  cuts_splits_deg TEXT,
  bruising_pieces TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  cut_count TEXT,
  seeds_pieces TEXT,
  seeds_pct TEXT,
  internal_damage_pieces TEXT,
  internal_damage_per TEXT,
  internal_damage_deg TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  brix TEXT,
  pressure1 TEXT,
  pressure2 TEXT,
  pressure3 TEXT,
  pressure4 TEXT,
  pressure5 TEXT,
  pressure6 TEXT,
  pressures_min TEXT,
  pressures_max TEXT,
  pressures_avg TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_citrus_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  color TEXT,
  diameter_min_mm TEXT,
  diameter_min_inches TEXT,
  diameter_max_mm TEXT,
  diameter_max_inches TEXT,
  diameter_most_mm TEXT,
  diameter_most_inches TEXT,
  scars_pieces TEXT,
  scars_pct TEXT,
  scars_deg TEXT,
  green_haze_pieces TEXT,
  green_haze_pct TEXT,
  green_haze_deg TEXT,
  oil_spots_pieces TEXT,
  oil_spots_pct TEXT,
  oil_spots_deg TEXT,
  cut_count TEXT,
  dry_pulp_pieces TEXT,
  dry_pulp_pct TEXT,
  dry_pulp_deg TEXT,
  seeds_pieces TEXT,
  seeds_pct TEXT,
  skin_breakdown_pieces TEXT,
  skin_breakdown_pct TEXT,
  skin_breakdown_deg TEXT,
  creasing_pieces TEXT,
  creasing_pct TEXT,
  creasing_deg TEXT,
  puffiness_pieces TEXT,
  puffiness_pct TEXT,
  puffiness_deg TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  spores_pieces TEXT,
  spores_pct TEXT,
  brix TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_pomegranate_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  grade TEXT,
  insp_grade TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  blush_color TEXT,
  blush_pct TEXT,
  arils_color TEXT,
  scars_russet_pieces TEXT,
  scars_russet_pct TEXT,
  scars_russet_deg TEXT,
  cuts_pieces TEXT,
  cuts_pct TEXT,
  cuts_deg TEXT,
  sun_scald_pieces TEXT,
  sun_scald_pct TEXT,
  sun_scald_deg TEXT,
  scald_pieces TEXT,
  scald_pct TEXT,
  scald_deg TEXT,
  bruising_pieces TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  brix_min TEXT,
  brix_max TEXT,
  brix_most TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.psa_stone_fruit_pallet (
  id BIGINT DEFAULT nextval('pallet_ids') PRIMARY KEY,
  location TEXT,
  arrival TEXT,
  importer_name TEXT,
  exporter_name TEXT,
  commodity TEXT,
  product_code TEXT,
  variety TEXT,
  insp_date TEXT,
  quantity NUMERIC,
  hatch TEXT,
  deck TEXT,
  container_id TEXT,
  fumigation TEXT,
  label_code TEXT,
  insp_location TEXT,
  importer_code TEXT,
  lot_code TEXT,
  insp_lot TEXT,
  pallet_id TEXT,
  grower_code TEXT,
  insp_grower_code TEXT,
  pack_date TEXT,
  insp_pack_date TEXT,
  size TEXT,
  insp_size TEXT,
  pack_code TEXT,
  pack_description TEXT,
  secondary_description TEXT,
  insp_pack_code TEXT,
  count TEXT,
  plu TEXT,
  plu_pct TEXT,
  country_of_origin TEXT,
  upc TEXT,
  weight TEXT,
  underweight_min TEXT,
  underweight_max TEXT,
  weighed_units TEXT,
  underweight_units TEXT,
  underweight_pct TEXT,
  pulp_temp TEXT,
  opening TEXT,
  ripening TEXT,
  ground_color TEXT,
  blush_color TEXT,
  blush_pct TEXT,
  scars_pieces TEXT,
  scars_pct TEXT,
  scars_deg TEXT,
  cuts_splits_pieces TEXT,
  cuts_splits_pct TEXT,
  cuts_splits_deg TEXT,
  split_pit_pieces TEXT,
  split_pit_pct TEXT,
  bruising_pieces TEXT,
  bruising_pct TEXT,
  bruising_deg TEXT,
  soft_tips_pieces TEXT,
  soft_tips_pct TEXT,
  dehydration_pieces TEXT,
  dehydration_pct TEXT,
  dehydration_deg TEXT,
  cut_count TEXT,
  internal_damage_pieces TEXT,
  internal_damage_per TEXT,
  mealiness_pieces TEXT,
  mealiness_pct TEXT,
  decay_pieces TEXT,
  decay_pct TEXT,
  decay_deg TEXT,
  mold_pieces TEXT,
  mold_pct TEXT,
  brix TEXT,
  pressure1 TEXT,
  pressure2 TEXT,
  pressure3 TEXT,
  pressure4 TEXT,
  pressure5 TEXT,
  pressure6 TEXT,
  pressures_min TEXT,
  pressures_max TEXT,
  pressures_avg TEXT,
  overall_quality NUMERIC,
  overall_condition NUMERIC,
  comment1 TEXT,
  comment2 TEXT,
  inspection_type TEXT,
  short_insp TEXT,
  fixed_weight TEXT
);
CREATE TABLE inspection.chile_departure_inspection_pallet (
  id TEXT PRIMARY KEY,
  lot_id TEXT,
  lot_number TEXT,
  location_name TEXT,
  shipper TEXT,
  inspection_date DATE,
  product_name TEXT,
  packing_type TEXT,
  product_type TEXT,
  pallet_count NUMERIC,
  supervisor TEXT,
  pallet_number TEXT,
  boxes_count NUMERIC,
  net_weight NUMERIC,
  grower TEXT,
  size TEXT,
  variety TEXT,
  packing_date date,
  label TEXT,
  temperature TEXT,
  open_appearance TEXT,
  color TEXT,
  stem TEXT,
  texture TEXT,
  bunches_count NUMERIC,
  brix NUMERIC,
  diameter_min NUMERIC,
  diameter_max NUMERIC,
  straggly_tight_pct NUMERIC,
  surface_disc_pct NUMERIC,
  russet_scars_pct NUMERIC,
  sunburn_pct NUMERIC,
  undersized_bunches_pct NUMERIC,
  other_defects_pct NUMERIC,
  stem_dehy_pct NUMERIC,
  glassy_weak_pct NUMERIC,
  decay_pct NUMERIC,
  split_crushed_pct NUMERIC,
  dry_split_pct NUMERIC,
  wet_sticky_pct NUMERIC,
  waterberries_pct NUMERIC,
  shatter_pct NUMERIC,
  total_quality_defects_pct NUMERIC,
  total_condition_defects_pct NUMERIC,
  quality_score NUMERIC,
  condition_score NUMERIC,
  score_name TEXT,
  report_link TEXT,
  images_link TEXT
);
CREATE TABLE inspection.peru_departure_inspection (
  container_id TEXT NOT NULL PRIMARY KEY,
  avg_bunches_per_box NUMERIC NOT NULL,
  avg_net_weight NUMERIC NOT NULL,
  bags_per_box NUMERIC NOT NULL,
  bag_type TEXT,
  brand TEXT NOT NULL,
  brix_avg NUMERIC NOT NULL,
  brix_max NUMERIC NOT NULL,
  brix_min NUMERIC NOT NULL,
  category TEXT NOT NULL,
  comments TEXT NOT NULL,
  condition_score NUMERIC NOT NULL,
  departure_week TEXT NOT NULL,
  destination TEXT NOT NULL,
  exporter TEXT NOT NULL,
  inspection_date DATE NOT NULL,
  packing_date DATE NOT NULL,
  packing_house TEXT NOT NULL,
  packing_material TEXT NOT NULL,
  presentation TEXT NOT NULL,
  quality_score NUMERIC NOT NULL,
  variety TEXT NOT NULL
);
CREATE TABLE inspection.peru_departure_inspection_pallet (
  id BIGSERIAL PRIMARY KEY,
  pallet_id TEXT NOT NULL,
  container_id TEXT NOT NULL,
  size TEXT NOT NULL,
  net_weight NUMERIC NOT NULL,
  opening_score NUMERIC NOT NULL,
  color_score NUMERIC NOT NULL,
  stem_score NUMERIC NOT NULL,
  texture_score NUMERIC NOT NULL,
  bunches_per_box NUMERIC NOT NULL,
  brix NUMERIC NOT NULL,
  quality_score NUMERIC NOT NULL,
  condition_score NUMERIC NOT NULL,
  straggly_tight_pct NUMERIC NOT NULL,
  surface_disc_pct NUMERIC NOT NULL,
  russet_scars_pct NUMERIC NOT NULL,
  sunburn_pct NUMERIC NOT NULL,
  undersized_bunches_pct NUMERIC NOT NULL,
  other_defects_pct NUMERIC NOT NULL,
  total_quality_defects_pct NUMERIC NOT NULL,
  stem_dehy_pct NUMERIC NOT NULL,
  glassy_weak_pct NUMERIC NOT NULL,
  decay_pct NUMERIC NOT NULL,
  split_crushed_pct NUMERIC NOT NULL,
  dry_split_pct NUMERIC NOT NULL,
  wet_sticky_pct NUMERIC NOT NULL,
  waterberries_pct NUMERIC NOT NULL,
  shatter_pct NUMERIC NOT NULL,
  total_condition_defects_pct NUMERIC NOT NULL,
  total_defects_pct NUMERIC NOT NULL,
  CONSTRAINT fk_container FOREIGN KEY(container_id) REFERENCES inspection.peru_departure_inspection(container_id) ON DELETE CASCADE
);